paths:
  /auth/register/:
    post:
      summary: Registrar un usuario en la plataforma
      tags: 
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        "200":
          description: La operación fue exitosa. Se registró el usuario.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Register'
        "400": 
          description: Se envió un dato no esperado.
        "500":
          description: Error inesperado en el servidor, no se pudo manejar el proceso.

  /auth/login/:
    post:
      summary: Iniciar sesión en la plataforma
      tags: 
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        "200":
          description: La operación fue exitosa. El usuario ha iniciado sesión.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Login'
        "400": 
          description: Credenciales inválidas.
        "500":
          description: Error inesperado en el servidor, no se pudo manejar el proceso.

  /api/products:
    get:
      summary: Obtener una lista de productos
      tags:
        - Products
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Límite de productos por página
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Número de página
        - in: query
          name: sort
          schema:
            type: string
            enum: [asc, desc]
            description: Orden de los productos por precio
        - in: query
          name: query
          schema:
            type: string
            description: Filtro de productos por categoría o disponibilidad
      responses:
        "200":
          description: Lista de productos obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsResponse'
        "500":
          description: Error inesperado en el servidor, no se pudo manejar el proceso

  /api/products/{id}:
    get:
      summary: Obtener un producto por ID
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del producto
      responses:
        "200":
          description: Producto obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "404":
          description: Producto no encontrado
        "500":
          description: Error inesperado en el servidor

  /api/carts/{cid}:
    get:
      summary: Obtener un carrito por ID
      tags:
        - Carts
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: ID del carrito
      responses:
        "200":
          description: Carrito obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        "404":
          description: Carrito no encontrado
        "500":
          description: Error inesperado en el servidor
        
components:
  schemas:
    Register: 
      type: object
      properties:
        _id: 
          type: string
          description: Id autogenerado de MongoDB.
        first_name: 
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        age:
          type: integer
          description: Edad del usuario
        email:
          type: string
          description: Email del usuario
        password:
          type: string
          description: Contraseña del usuario
        cart: 
          type: string
          description: Id del carrito asociado
        role: 
          type: string
          description: Role del usuario
          enum: ['User', 'Premium', 'Admin']
          default: 'User'
      example: 
        _id: "647fa8c9e46dbc5a20320181"
        first_name: "Usuario de prueba 1"
        last_name: "Apellido de prueba 1"
        age: 19
        email: "correodeprueba1@gmail.com"
        password: "Test123456"
        cart: "647fa8c9e46dbc5a20320181"
        role: "Premium"

    Login:
      type: object
      properties:
        email:
          type: string
          description: Email del usuario
        password:
          type: string
          description: Contraseña del usuario
      example: 
        email: "correodeprueba1@gmail.com"
        password: "Test123456"
      required:
        - email
        - password

    ProductsResponse:
      type: object
      properties:
        success:
          type: boolean
        payload:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        totalPages:
          type: integer
        prevPage:
          type: integer
          nullable: true
        nextPage:
          type: integer
          nullable: true
        hasPrevPage:
          type: boolean
        hasNextPage:
          type: boolean
        prevLink:
          type: string
          nullable: true
        nextLink:
          type: string
          nullable: true

    Product:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
        code:
          type: string
        status:
          type: boolean
        stock:
          type: number
        category:
          type: string
        thumbnail:
          type: string
        owner:
          type: string
      example:
        _id: "60c72b2f9b1e8b3a1c8d4e5e"
        name: "Producto de prueba"
        description: "Descripción del producto de prueba"
        price: 99.99
        code: "PRD001"
        status: true
        stock: 5
        category: "Category 1"
        thumbnail: "http://imagen.com/thumbnail.jpg"
        owner: "admin"

    Cart:
      type: object
      properties:
        _id:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        total:
          type: number
      example:
        _id: "60c72b2f9b1e8b3a1c8d4e5e"
        products:
          - _id: "60c72b2f9b1e8b3a1c8d4e5e"
            name: "Producto de prueba"
            description: "Descripción del producto de prueba"
            price: 99.99
            code: "PROD12345"
            status: true
            stock: 10
            category: "Category 1"
            thumbnail: "http://imagen.com/imagen.jpg"
            owner: "admin"
        total: 199.98