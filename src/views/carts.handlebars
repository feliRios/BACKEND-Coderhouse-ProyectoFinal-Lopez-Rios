<div class="mt-24 relative">
    <div class="absolute inset-x-0 top-1/3 h-48 bg-gradient-to-r from-purple-300 to-purple-500 rounded-full blur-3xl opacity-30"></div>
    <div class="absolute inset-x-0 bottom-0 h-48 bg-gradient-to-r from-green-300 to-green-500 rounded-full blur-3xl opacity-30"></div>

    <div class="flex flex-col lg:flex-row space-x-0 m-8 lg:space-x-4 space-y-4 lg:space-y-0">
        <div class="w-full bg-white p-6 overflow-y-auto rounded-2xl shadow-lg">
            <table class="w-full divide-y divide-gray-300 rounded-lg">
                <thead class="bg-gray-100 rounded-xl">
                    <tr>
                        <th class="px-2 lg:px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider text-center">
                            Imagen
                        </th>
                        <th class="px-2 lg:px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider text-center">
                            Producto
                        </th>
                        <th class="px-2 lg:px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider text-center">
                            Precio
                        </th>
                        <th class="px-2 lg:px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider text-center">
                            Cantidad
                        </th>
                        <th class="px-2 lg:px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider text-center">
                            Acci√≥n
                        </th>
                    </tr>
                </thead>
                {{#each cartProduct}}
                <tbody class="divide-y bg-white divide-gray-200 rounded-xl">
                    <tr>
                        <td class="px-2 lg:px-6 py-4 whitespace-nowrap">
                            <div class="flex justify-center items-center">
                                <img src={{this.product.thumbnail}} alt={{this.product.name}} width="60" height="60" />
                            </div>
                        </td>
                        <td class="px-2 lg:px-6 py-4 whitespace-nowrap">
                            <div class="text-xs lg:text-sm text-gray-800 text-center">
                                {{this.product.name}}
                            </div>
                        </td>
                        <td class="px-2 lg:px-6 py-4 whitespace-nowrap">
                            <div class="text-xs lg:text-sm text-gray-600 text-center">
                                {{this.product.price}}
                            </div>
                        </td>
                        <td class="px-2 lg:px-6 py-4 whitespace-nowrap text-center quantity-cell">
                            <div class="text-xs lg:text-sm text-gray-600 text-center">
                                x<span class="quantity">{{this.quantity}}</span>
                            </div>
                        </td>
                        <td class="px-2 lg:px-6 py-4 whitespace-nowrap text-center">
                            <button class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded delete-btn"
                                    data-product-id="{{this.product._id}}" data-cart-id="{{this.cart}}">
                                Eliminar 1
                            </button>
                            <button class="bg-red-700 hover:bg-red-900 text-white font-bold py-2 px-4 rounded delete-all-btn"
                                    data-product-id="{{this.product._id}}" data-cart-id="{{this.cart}}">
                                Eliminar Todo
                            </button>
                        </td>
                    </tr>
                </tbody>
                {{/each}}
            </table>
            <div class="flex justify-center mt-4">
                <button onclick="location.href='/carts/{{this.userCart}}/purchase'" 
                        class="bg-purple-600 text-white font-semibold px-8 py-2 rounded-full hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 transition-all duration-300">
                    Comprar
                </button>
            </div>
        </div>
    </div>
</div>


<script>
    document.addEventListener("DOMContentLoaded", () => {
        const deleteButtons = document.querySelectorAll('.delete-btn');
        const deleteAllButtons = document.querySelectorAll('.delete-all-btn');

        deleteButtons.forEach(button => {
            button.addEventListener('click', async (event) => {
                const productId = button.dataset.productId;
                const cartId = button.dataset.cartId;

                try {
                    const response = await fetch(`/api/carts/${cartId}/product/${productId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    });
                    const result = await response.json();
                    if (result.success) {
                        const quantityCell = button.closest('tr').querySelector('.quantity');
                        let quantity = parseInt(quantityCell.innerText);

                        if (quantity > 1) {
                            quantity--;
                            quantityCell.innerText = quantity;
                        } else {
                            button.closest('tr').remove();
                        }

                        Toastify({
                            text: result.message,
                            className: "success",
                            newWindow: true,
                            style: {
                                background: "rgba(43, 69, 186, 0.2)",
                                border: "1px solid #2b45ba",
                                borderRadius: "10px",
                                fontSize: "12px",
                            },
                        }).showToast();
                    } else {
                        Toastify({
                            text: result.message,
                            className: "error",
                            newWindow: true,
                            style: {
                                background: "rgba(255, 0, 0, 0.2)",
                                border: "1px solid #C52222",
                                borderRadius: "10px",
                                fontSize: "12px",
                            },
                        }).showToast();
                    }
                } catch (error) {
                    console.error('Error al eliminar producto del carrito:', error);
                }
            });
        });

        deleteAllButtons.forEach(button => {
            button.addEventListener('click', async (event) => {
                const productId = button.dataset.productId;
                const cartId = button.dataset.cartId;

                try {
                    const response = await fetch(`/api/carts/${cartId}/product/${productId}?removeAll=true`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    });
                    const result = await response.json();
                    if (result.success) {
                        button.closest('tr').remove();
                        Toastify({
                            text: result.message,
                            className: "success",
                            newWindow: true,
                            style: {
                                background: "rgba(43, 69, 186, 0.2)",
                                border: "1px solid #2b45ba",
                                borderRadius: "10px",
                                fontSize: "12px",
                            },
                        }).showToast();
                    } else {
                        Toastify({
                            text: result.message,
                            className: "error",
                            newWindow: true,
                            style: {
                                background: "rgba(255, 0, 0, 0.2)",
                                border: "1px solid #C52222",
                                borderRadius: "10px",
                                fontSize: "12px",
                            },
                        }).showToast();
                    }
                } catch (error) {
                    console.error('Error al eliminar producto del carrito:', error);
                }
            });
        });
    });
</script>

